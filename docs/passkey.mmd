%% To render this diagram, paste the code into the live editor https://mermaid-js.github.io/mermaid-live-editor/ or use Mermaid CLI

sequenceDiagram
    participant CLRFundApp
    participant Browser
    participant Subgraph
    participant Authencator
 
    alt Create passkey
        Note over CLRFundApp, Authencator: Create passkey
        CLRFundApp ->> Subgraph: check for past contributions
        Subgraph ->> CLRFundApp: No
        CLRFundApp ->> Browser: check for uncommitted cart in the local storage
        Browser ->> CLRFundApp: No
        Note over CLRFundApp: Create a new passkey only if no past contributions or<br>uncommitted cart, otherwise get existing passkey
        CLRFundApp ->> Browser: create passkey, call navigator.credentials.create(walletAddress)
        Browser ->> Authencator: create passkey
        Authencator ->> Browser: returns the public key of the new passkey
        Browser ->> CLRFundApp: public key
        Note over CLRFundApp: encrypt the uncommitted cart using the <br>sha256 hash of the public key
        CLRFundApp ->> Browser:  store uncommitted cart
        Note over CLRFundApp: encrypt the committed cart using the MACI key created <br>with the sha256 hash of the public key as a seed
        CLRFundApp ->> Subgraph: store committed cart through on-chain transaction

    else
        Note over CLRFundApp, Authencator: Get passkey signature
        CLRFundApp ->> Browser: get signature, call navigator.credentials.get(random32Bytes)
        Browser ->> Authencator: get signature
        Authencator ->> Browser: signature
        Browser ->> CLRFundApp: signature
        Note over CLRFundApp: recover 2 public keys from the signature
        CLRFundApp ->> Subgraph: get encrypted committed cart
        Note over CLRFundApp: create MACI key using the public keys,<br>the key that can decrypt the carts is the correct key
        CLRFundApp ->> Browser: get uncommitted carts
        Note over CLRFundApp: use the sha256 hash of the public keys,<br>to decrypt the uncommitted cart,<br>the key that can decrypt the carts is the correct key
    end
